<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bargains.dao.ProductEntityMapper">
    <resultMap id="BaseResultMap" type="com.bargains.entity.ProductEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="merchant_id" jdbcType="INTEGER" property="merchantId"/>
        <result column="origin_place" jdbcType="VARCHAR" property="originPlace"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="brand_name" jdbcType="VARCHAR" property="brandName"/>
        <result column="weight" jdbcType="VARCHAR" property="weight"/>
        <result column="specification" jdbcType="VARCHAR" property="specification"/>
        <result column="detail_picture" jdbcType="VARCHAR" property="detailPicture"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, product_id, merchant_id, origin_place, name, brand_name, weight, specification, 
    detail_picture
  </sql>
    <select id="selectByExample" parameterType="com.bargains.entity.ProductEntityExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.bargains.entity.ProductEntityExample">
        delete from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective" parameterType="com.bargains.entity.ProductEntity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="merchantId != null">
                merchant_id,
            </if>
            <if test="originPlace != null">
                origin_place,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="brandName != null">
                brand_name,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="specification != null">
                specification,
            </if>
            <if test="detailPicture != null">
                detail_picture,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="merchantId != null">
                #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="originPlace != null">
                #{originPlace,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="brandName != null">
                #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=VARCHAR},
            </if>
            <if test="specification != null">
                #{specification,jdbcType=VARCHAR},
            </if>
            <if test="detailPicture != null">
                #{detailPicture,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bargains.entity.ProductEntityExample" resultType="java.lang.Integer">
        select count(*) from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.merchantId != null">
                merchant_id = #{record.merchantId,jdbcType=INTEGER},
            </if>
            <if test="record.originPlace != null">
                origin_place = #{record.originPlace,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.brandName != null">
                brand_name = #{record.brandName,jdbcType=VARCHAR},
            </if>
            <if test="record.weight != null">
                weight = #{record.weight,jdbcType=VARCHAR},
            </if>
            <if test="record.specification != null">
                specification = #{record.specification,jdbcType=VARCHAR},
            </if>
            <if test="record.detailPicture != null">
                detail_picture = #{record.detailPicture,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product
        set id = #{record.id,jdbcType=INTEGER},
        product_id = #{record.productId,jdbcType=INTEGER},
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
        origin_place = #{record.originPlace,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        brand_name = #{record.brandName,jdbcType=VARCHAR},
        weight = #{record.weight,jdbcType=VARCHAR},
        specification = #{record.specification,jdbcType=VARCHAR},
        detail_picture = #{record.detailPicture,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bargains.entity.ProductEntity">
        update product
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="merchantId != null">
                merchant_id = #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="originPlace != null">
                origin_place = #{originPlace,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="brandName != null">
                brand_name = #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=VARCHAR},
            </if>
            <if test="specification != null">
                specification = #{specification,jdbcType=VARCHAR},
            </if>
            <if test="detailPicture != null">
                detail_picture = #{detailPicture,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>