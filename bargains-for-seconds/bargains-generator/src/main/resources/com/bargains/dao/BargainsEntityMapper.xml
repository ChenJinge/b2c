<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bargains.dao.BargainsEntityMapper">
    <resultMap id="BaseResultMap" type="com.bargains.entity.BargainsEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="original_price" jdbcType="DECIMAL" property="originalPrice"/>
        <result column="bargains_price" jdbcType="DECIMAL" property="bargainsPrice"/>
        <result column="merchant_id" jdbcType="INTEGER" property="merchantId"/>
        <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate"/>
        <result column="audit_date" jdbcType="TIMESTAMP" property="auditDate"/>
        <result column="audit_status" jdbcType="INTEGER" property="auditStatus"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, product_id, title, picture, original_price, bargains_price, merchant_id, apply_date, 
    audit_date, audit_status, start_time, end_time, count, stock, description
  </sql>
    <select id="selectByExample" parameterType="com.bargains.entity.BargainsEntityExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from bargains
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.bargains.entity.BargainsEntityExample">
        delete from bargains
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective" parameterType="com.bargains.entity.BargainsEntity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into bargains
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="originalPrice != null">
                original_price,
            </if>
            <if test="bargainsPrice != null">
                bargains_price,
            </if>
            <if test="merchantId != null">
                merchant_id,
            </if>
            <if test="applyDate != null">
                apply_date,
            </if>
            <if test="auditDate != null">
                audit_date,
            </if>
            <if test="auditStatus != null">
                audit_status,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                #{originalPrice,jdbcType=DECIMAL},
            </if>
            <if test="bargainsPrice != null">
                #{bargainsPrice,jdbcType=DECIMAL},
            </if>
            <if test="merchantId != null">
                #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="applyDate != null">
                #{applyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="auditDate != null">
                #{auditDate,jdbcType=TIMESTAMP},
            </if>
            <if test="auditStatus != null">
                #{auditStatus,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bargains.entity.BargainsEntityExample"
            resultType="java.lang.Integer">
        select count(*) from bargains
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update bargains
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.picture != null">
                picture = #{record.picture,jdbcType=VARCHAR},
            </if>
            <if test="record.originalPrice != null">
                original_price = #{record.originalPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.bargainsPrice != null">
                bargains_price = #{record.bargainsPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.merchantId != null">
                merchant_id = #{record.merchantId,jdbcType=INTEGER},
            </if>
            <if test="record.applyDate != null">
                apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.auditDate != null">
                audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.auditStatus != null">
                audit_status = #{record.auditStatus,jdbcType=INTEGER},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.stock != null">
                stock = #{record.stock,jdbcType=INTEGER},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update bargains
        set id = #{record.id,jdbcType=INTEGER},
        product_id = #{record.productId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        picture = #{record.picture,jdbcType=VARCHAR},
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
        bargains_price = #{record.bargainsPrice,jdbcType=DECIMAL},
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
        apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
        audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
        audit_status = #{record.auditStatus,jdbcType=INTEGER},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        count = #{record.count,jdbcType=INTEGER},
        stock = #{record.stock,jdbcType=INTEGER},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bargains.entity.BargainsEntity">
        update bargains
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                original_price = #{originalPrice,jdbcType=DECIMAL},
            </if>
            <if test="bargainsPrice != null">
                bargains_price = #{bargainsPrice,jdbcType=DECIMAL},
            </if>
            <if test="merchantId != null">
                merchant_id = #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="applyDate != null">
                apply_date = #{applyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="auditDate != null">
                audit_date = #{auditDate,jdbcType=TIMESTAMP},
            </if>
            <if test="auditStatus != null">
                audit_status = #{auditStatus,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>